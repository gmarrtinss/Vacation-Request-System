services:
  postgres-db:
    image: postgres:15
    container_name: postgres-vacation
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata-vacation:/var/lib/postgresql/data
    networks:
      - vacation-net
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d vacationDB"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-vacation
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - vacation-net
    depends_on:
      postgres-db:
        condition: service_healthy
    restart: always

  backend:
    build:
      context: ./vacation-backend
      dockerfile: Dockerfile
    container_name: vacation-backend-app
    ports:
      - "8080:8080"
    networks:
      - vacation-net
    depends_on:
      postgres-db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    restart: always

networks:
  vacation-net:
    driver: bridge

volumes:
  pgdata-vacation:
    driver: local
